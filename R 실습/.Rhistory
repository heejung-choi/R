color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
# 광진구 데이터만 뽑음
k3@data<-k3@data[c(67:81),]  #이렇게 하지 않으면 k3@data에 너무 많이 들어가있다.
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='광진구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL #이전에 담겨져 있는 것이 있다면 해제시키는 것
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
map7
map7 <- NULL #이전에 담겨져 있는 것이 있다면 해제시키는 것
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
install.packages("RJDBC")
#install.packages("RColorBrewer")
library(RColorBrewer)
saveWidget(map7, file="m.html")
saveWidget(map7, file="m.html")
View(quakes)
data <- quakes[1:20,]
library(htmlwidgets)
saveWidget(map7, file="m.html")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library(htmlwidgets)
saveWidget(map7, file="m.html")
library(sp)
saveWidget(map7, file="m.html")
saveWidget(map7, file="m.html")
library(htmlwidgets)
saveWidget(map7, file="m.html")
data <- quakes[1:20,]
#data <- quakes
leaflet() %>% addTiles() %>%
addMarkers(data$long, data$lat, popup = paste("지진 강도 : ",
as.character(data$mag)), label = as.character(data$mag))
data = quakes[1:20,]
map7
View(quakes)
data <- quakes[1:20,]
#data <- quakes
leaflet() %>% addTiles() %>%
addMarkers(data$long, data$lat, popup = paste("지진 강도 : ",
as.character(data$mag)), label = as.character(data$mag))
data = quakes[1:20,]
getColor <- function(quakes) {
result <- sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
return(result)
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(data)
)
leaflet() %>% addTiles() %>%
addAwesomeMarkers(data$long, data$lat, icon=icons,
label = as.character(data$mag))
?addAwesomeMarkers
data <- quakes[1:20,]
#data <- quakes
leaflet() %>% addTiles() %>%
addMarkers(data$long, data$lat, popup = paste("지진 강도 : ",
as.character(data$mag)), label = as.character(data$mag))
#data <- quakes
leaflet() %>% addTiles() %>%
addMarkers(data$long, data$lat, popup = paste("지진 강도 : ",
as.character(data$mag)), label = as.character(data$mag))
#data <- quakes
library(dplyr)
leaflet() %>% addTiles() %>%
addMarkers(data$long, data$lat, popup = paste("지진 강도 : ",
as.character(data$mag)), label = as.character(data$mag))
library(leaflet)
leaflet() %>% addTiles() %>%
addMarkers(data$long, data$lat, popup = paste("지진 강도 : ",
as.character(data$mag)), label = as.character(data$mag))
data = quakes[1:20,]
leaflet() %>% addTiles() %>%
addMarkers(data$long, data$lat, popup = paste("지진 강도 : ",
as.character(data$mag)), label = as.character(data$mag))
getColor <- function(quakes) {
result <- sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
return(result)
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(data)
)
leaflet() %>% addTiles() %>%
addAwesomeMarkers(data$long, data$lat, icon=icons,
label = as.character(data$mag))
?addAwesomeMarkers
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(data)
)
leaflet() %>% addTiles() %>%
addAwesomeMarkers(data$long, data$lat, icon=icons,
label = as.character(data$mag))
# 광진구 데이터만 뽑음
k3@data<-k3@data[c(67:81),]  #이렇게 하지 않으면 k3@data에 너무 많이 들어가있다.
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='광진구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
#library(Kormaps)
DONG<-read.csv('data/one.csv')
Encoding(names(korpopmap2))<-'UTF-8'
Encoding(korpopmap2@data$name)<-'UTF-8'
Encoding(korpopmap2@data$행정구역별_읍면동)<-'UTF-8'
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
head(korpopmap3@data)
k2 <- korpopmap2
k3 <- korpopmap3
k2@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 광진구 데이터만 뽑음
k3@data<-k3@data[c(67:81),]  #이렇게 하지 않으면 k3@data에 너무 많이 들어가있다.
k3@data
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='광진구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL #이전에 담겨져 있는 것이 있다면 해제시키는 것
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
#c가 붙어있는 컬럼은 지역의 코드번호이다.
View(k2@data)
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
view(k3@data)
View(k3@data)
guname <- '강남구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
gucode
pattern <- paste0('^', gucode)
k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
pattern
pattern <- paste0('^', gucode)
gucode <- k2@data[k2@data$name == guname, "code.data"]
gucode
pattern <- paste0('^', gucode
k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@data<-k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@polygons
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@data
View(k3@data)
k3@polygons
View(k3)
View(k3@polygons)
View(k3@data)
#data 추출값 확인 3092-3113
k3@polygons<-k3@polygons[c(3092:3113)]
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
k3@data<-k3@data[c(3092:3113)]
k3@data<-k3@data[c(3092:3113),]
k3@data
[c("C행정구역별_읍면동", "행정구역별_읍면동")]
k3@data
k3 <- korpopmap3
DONG<-read.csv('data/one.csv')
Encoding(names(korpopmap2))<-'UTF-8'
Encoding(korpopmap2@data$name)<-'UTF-8'
Encoding(korpopmap2@data$행정구역별_읍면동)<-'UTF-8'
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
head(korpopmap3@data)
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 강남구: 11230
k3@data[3092]
# 강남구: 11230
k3@data(3092)
# 강남구: 11230
str(k3@data)
k3@data[[3092]]
k3@data[3092]
k3@data[k3@data,3092]
k3@data[k3@data,3092]
k3@data[3092,]
k3@data[1,]
k3@data[11230,]
k3@data[1:10000,]
a<-k3@data[1:10000,]
view(a)
View(a)
k3@polygons
guname <- '강남구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
k3@data<-k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@data
k3@polygons
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
View(k3@polygons)
k3@polygons$id
k3@polygons
a<-k3@polygons
table(a)
table(a)
a$ID
k3@polygons@ID
k3@polygons@ID
k3@polygons@ID
k3@polygons[[c(1:1000)]]@ID
k3@polygons[[1]]@ID
k3@polygons[[2]]@ID
k3@polygons[[3]]@ID
k3@polygons[[1:10000]]@ID
k3@polygons[[1:10000]]@ID
guname <- '강남구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
gucode
pattern
source('C:/heejung/Rstudy/oneMap.R', encoding = 'UTF-8', echo=TRUE)
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data)]
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data)]
k3@polygons
k3@polygons[[2]]@ID
#library(Kormaps)
DONG<-read.csv('data/one.csv')
Encoding(names(korpopmap2))<-'UTF-8'
Encoding(korpopmap2@data$name)<-'UTF-8'
Encoding(korpopmap2@data$행정구역별_읍면동)<-'UTF-8'
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
head(korpopmap3@data)
k2 <- korpopmap2
k3 <- korpopmap3
k2@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
guname <- '강남구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
gucode
pattern <- paste0('^', gucode)
k3@data<-k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@data
k3@polygons<-k3@polygons[grep(pattern, k3@data$code.data)]
k3@polygons
k3@data<-k3@data[grep(pattern, k3@data$code.data),]
k3@data
k3@data$name<-gsub('·','',k3@data$name)
k3@data$name
colnames(DONG)<-c('구별','name','일인가구')
colnames(DONG)
dong <- DONG %>%filter(구별=='강남구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mymap
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL #이전에 담겨져 있는 것이 있다면 해제시키는 것
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=31, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.4, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
leaflet(k3)
k3@data$일인가구
k3@data
mypalette
k3@polygons
map7
k3@polygons
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
k3@data$code.data
pattern
popup
source('C:/heejung/Rstudy/oneMap.R', encoding = 'UTF-8', echo=TRUE)
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 광진구 데이터만 뽑음
k3@data<-k3@data[c(67:81),]  #이렇게 하지 않으면 k3@data에 너무 많이 들어가있다.
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='광진구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL #이전에 담겨져 있는 것이 있다면 해제시키는 것
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
library(dplyr)
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
library(leaflet)
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7 <- NULL #이전에 담겨져 있는 것이 있다면 해제시키는 것
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
# 광진구 데이터만 뽑음
k3@data<-k3@data[c(67:81),]  #이렇게 하지 않으면 k3@data에 너무 많이 들어가있다.
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='광진구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
Encoding(names(korpopmap1)) <- 'UTF-8' #인코딩정보를 UTF-8로 설정함으로 한글깨지는 문제가 해결
Encoding(names(korpopmap2)) <- 'UTF-8'
Encoding(names(korpopmap3)) <- 'UTF-8'
korpopmap2@data$name
Encoding(korpopmap2@data$name)
Encoding(korpopmap2@data$name)<-'UTF-8'
Encoding(korpopmap2@data$행정구역별_읍면동)<-'UTF-8'
seoulpopmap@data$행정구역별_읍면동
seoulpopmap <- korpopmap2
seoulpopmap@data <- seoulpopmap@data[-26:-251,] # 서울 지역의 구만
seoulpopmap@polygons<-seoulpopmap@polygons[-26:-251] # 서울 지역의 구만
seoulpopmap
#library(Kormaps)
DONG<-read.csv('data/one.csv')
DONG<-read.csv('data/one.csv')
Encoding(names(korpopmap2))<-'UTF-8'
Encoding(korpopmap2@data$name)<-'UTF-8'
Encoding(korpopmap2@data$행정구역별_읍면동)<-'UTF-8'
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
head(korpopmap3@data)
# 광진구 데이터만 뽑음
k3@data<-k3@data[c(67:81),]  #이렇게 하지 않으면 k3@data에 너무 많이 들어가있다.
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='광진구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
#mypalette <- colorNumeric(palette ='RdYlBu' , domain = k3@data$'일인가구')
#mypalette <- colorNumeric(palette ='PuRd' , domain = k3@data$'일인가구')
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL #이전에 담겨져 있는 것이 있다면 해제시키는 것
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
