df %>% filter(!is.na(score))  # score 결측치 제거
df
table(is.na(df))  # 결측치 빈도 출력
# 변수별로 결측치 확인하기
table(is.na(df$sex))    # sex 결측치 빈도 출력
table(is.na(df$score))  # score 결측치 빈도 출력
# 결측치 포함된 상태로 분석
mean(df$score)  # 평균 산출
sum(df$score)   # 합계 산출
na.rm=TRUE
df %>% na.rm=TRUE
table(sex,na.rm=TRUE
table(sex,na.rm=TRUE)
table(sex,na.rm=TRUE)
sum(sex,na.rm=TRUE)
sum(df$sex,na.rm=TRUE)
sum(df$sex,na.rm=TRUE)
# 결측치 포함된 상태로 분석
mean(df$score)  # 평균 산출 #한개라도 NA가 있으면 NA가 나온다.
#이럴 경우 NA를 기본값으로 하고 하거나, 제거하고 하면 된다.
sum(df$score)   # 합계 산출
# 결측치 있는 행 제거하기
library(dplyr) # dplyr 패키지 로드
df %>% filter(is.na(score))   # score가 NA인 데이터만 출력
df %>% filter(!is.na(score))  # score 결측치 제거
# 결측치 제외한 데이터로 분석하기
df_nomiss <- df %>% filter(!is.na(score))  # score 결측치 제거
mean(df_nomiss$score)                      # score 평균 산출
sum(df_nomiss$score)                       # score 합계 산출
# 여러 변수 동시에 결측치 없는 데이터 추출하기
# score, sex 결측치 제외
df_nomiss <- df %>% filter(!is.na(score) & !is.na(sex))
df_nomiss
# 결측치가 하나라도 있으면 제거하기
df_nomiss2 <- na.omit(df)  # 모든 변수에 결측치 없는 데이터 추출
mean(df$score, na.rm = T)
sum(df$score, na.rm = T)   # 결측치 제외하고 합계 산출
sum(df$score, na.rm = T)   # 결측치 제외하고 합계 산출
#summarise()에서 na.rm = T사용하기
# 결측치 생성
exam <- read.csv("csv_exam.csv")            # 데이터 불러오기
#summarise()에서 na.rm = T사용하기
# 결측치 생성
exam <- read.csv("data/csv_exam.csv")            # 데이터 불러오기
exam
table(is.na(exam))
table(is.na(exam))
exam[c(3, 8, 15), "math"] <- NA             # 3, 8, 15행의 math에 NA 할당
#평균 구하기
exam %>% summarise(mean_math = mean(math))             # 평균 산출
exam %>% summarise(mean_math = mean(math, na.rm = T))  # 결측치 제외하고 평균 산출
# 다른 함수들에 적용
exam %>% summarise(mean_math = mean(math, na.rm = T),      # 평균 산출
sum_math = sum(math, na.rm = T),        # 합계 산출
median_math = median(math, na.rm = T))  # 중앙값 산출
mean(exam$math, na.rm = T)  # 결측치 제외하고 math 평균 산출
# 평균으로 대체하기
exam$math <- ifelse(is.na(exam$math), 55, exam$math)  # math가 NA면 55로 대체
mean<-mean(exam$math, na.rm = T)  # 결측치 제외하고 math 평균 산출
# 평균으로 대체하기
exam$math <- ifelse(is.na(exam$math), mean, exam$math)  # math가 NA면 55로 대체
exam$math
table(is.na(exam$math))                               # 결측치 빈도표 생성
mean(exam$math)  # math 평균 산출
# 이상치 포함된 데이터 생성 - sex 3, score 6
outlier <- data.frame(sex = c(1, 2, 1, 3, 2, 1),  score = c(5, 4, 3, 4, 2, 6))
# 이상치 확인하기
table(outlier$sex)
table(outlier$score)
# 결측 처리하기 - sex
# sex가 3이면 NA 할당
outlier$sex <- ifelse(outlier$sex == 3, NA, outlier$sex)
outlier$sex
#결측 처리하기 - score
# score가 1~5 아니면 NA 할당
outlier$score <- ifelse(outlier$score > 5, NA, outlier$score)
mpg <- as.data.frame(ggplot2::mpg)
boxplot(mpg$hwy)
#상자그림 통계치 출력
boxplot(mpg$hwy)$stats  # 상자그림 통계치 출력
ggplot2::mpg
View(mpg)
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하인 자동차와 5이하인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
midwest %>% filter(displ<=4)
midwest
summary(midwest)
mpg
summary(mpg)
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하인 자동차와 5이하인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4)
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하인 자동차와 5이하인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4, displ<=5)
mpg %>% filter(displ<=4) %>% summarise(mean(hwy))
mpg %>% filter(displ<=5)%>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4|displ>=5) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4|displ>=5) %>%group_by(displ) %>% summarise(mean(hwy))
summary(mpg)
#4-2audi와 toyota 중 어느 manafacturer 의 cty가 더 높은지 알아보세요
mpg %>% filter(model=='audi'|model=='toyota')
mpg
#4-2audi와 toyota 중 어느 manafacturer 의 cty가 더 높은지 알아보세요
mpg %>% filter(manufacturer=='audi'|manufacturer=='toyota')
summary(mpg)
#4-2audi와 toyota 중 어느 manafacturer 의 cty(도시연비)가 더 높은지 알아보세요
mpg %>% filter(manufacturer=='audi'|manufacturer=='toyota') %>% group_by(manufacturer) %>% summarise(mean(cty))
mpg
#4-3 chevrilet ford honda 자동차의 고속도로 연비 평균을 알아보려고 합니다.
# 이회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요
mpg %>% filter(manufacturer=='chevrilet'|manufacturer=='ford'|manufacturer=='ford')
#4-3 chevrilet ford honda 자동차의 고속도로 연비 평균을 알아보려고 합니다.
# 이회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요
mpg %>% filter(manufacturer=='chevrilet'|manufacturer=='ford'|manufacturer=='honda')
#4-3 chevrilet ford honda 자동차의 고속도로 연비 평균을 알아보려고 합니다.
# 이회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요
mpg %>% filter(manufacturer=='chevrilet'|manufacturer=='ford'|manufacturer=='honda') %>% group_by(manufacturer) %>% summarise(mean(hwy))
mpg
#4-3 chevrilet ford honda 자동차의 고속도로 연비 평균을 알아보려고 합니다.
# 이회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요
mpg %>% filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>% group_by(manufacturer) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4|displ>=5) %>%group_by(displ) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4|displ>=5) %>%group_by(displ) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4)%>%group_by(displ) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% group_by(displ<=4) %>% summarise(mean(hwy))
filter(displ<=4)%>%
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4)%>%group_by(displ<=4) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4)%>%group_by(displ<=4) %>% summarise(mean(hwy))
mpg %>% filter(displ>=5)%>%group_by(displ>=5) %>% summarise(mean(hwy))
#4-2audi와 toyota 중 어느 manafacturer 의 cty(도시연비)가 더 높은지 알아보세요
mpg %>% filter(manufacturer=='audi'|manufacturer=='toyota') %>% group_by(manufacturer) %>% summarise(mean(cty))
#4-3 chevrilet ford honda 자동차의 고속도로 연비 평균을 알아보려고 합니다.
# 이회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요
mpg %>% filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>% group_by(manufacturer) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4|displ>=5)%>%group_by(displ<=4,displ>=5) %>% summarise(mean(hwy))
mpg %>% filter(displ>=5)%>%group_by(displ>=5) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4|displ>=5)%>%group_by(displ<=4,displ>=5) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>%group_by(displ<=4,displ>=5) %>% summarise(mean(hwy))
#4. 다음에 제시된 문제를 각각 4-1, 4-2, 4-3 으로 넘버링 하여 해결 코드를 R로 작성한다.
#4-1 displ(배기량)이 4이하 5이상인 자동차 중 어떤
#자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세오
mpg %>% filter(displ<=4|displ>=5)%>%group_by(displ<=4,displ>=5) %>% summarise(mean(hwy))
#5-1 mpg데이터는 11개 변수로 구성되어 있다.
# mpg데이터에서 class(자동차의 종류), cty(도시연비)
#변수를 추출해 새로운 데이터를 만드세요
mpgNew<-c(mpg$class,mpg$cty)
#5-1 mpg데이터는 11개 변수로 구성되어 있다.
# mpg데이터에서 class(자동차의 종류), cty(도시연비)
#변수를 추출해 새로운 데이터를 만드세요
(mpgNew<-c(mpg$class,mpg$cty))
view(mpgNew)
View(mpgNew)
mpg$class
mpg %>% filter(class,cty)
mpg %>% filter(class,cty)
mpg %>% group_by(class,cty)
mpg %>% filter(class,cty)
mpg %>% select(class,cty)
(mpgNew<-mpg %>% select(class,cty))
View(mpg)
boxplot(mpg$hwy, range=2)
summary(mpg$hwy)
#상자그림 통계치 출력
boxplot(mpg$hwy)$stats  # 상자그림 통계치 출력
boxplot(mpg$hwy)$stats  # 상자그림 통계치 출력
# 결측 처리하기
# 12~37 벗어나면 NA 할당
mpg$hwy <- ifelse(mpg$hwy < 12 | mpg$hwy > 37, NA, mpg$hwy)
table(is.na(mpg$hwy))
# 결측치 제외하고 분석하기
mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy, na.rm = T))
#7-1 mpg 데이터 복사본을 만들고 cty, hwy를 합한 합산 연비 변수를 추가하세요
mpg
#7-1 mpg 데이터 복사본을 만들고 cty, hwy를 합한 합산 연비 변수를 추가하세요
mpg <- as.data.frame(ggplot2::mpg)
mpg<-mpg %>% mutate(plus=cty+hwy)
mpg
mpg<-mpg %>% mutate(meanPlus=plus/2)
mpg<-
mpg %>% mutate(합산연비변수=cty+hwy)
mpg <- as.data.frame(ggplot2::mpg)
mpg<-  mpg %>% mutate(합산연비변수=cty+hwy)
mpg
#7-2 앞에서 만든 합산연비 편수를 2로 나눠 평균 연비 변수를 추가하세요
mpg<-mpg %>% mutate(평균연비변수=합산연비변수/2)
#7-3 평균 연비 변수가 가장 높은 자동차 3종의 데이터를 출력하세요
mpg %>% arrange(평균 연비 변수)
#7-3 평균 연비 변수가 가장 높은 자동차 3종의 데이터를 출력하세요
mpg %>% arrange(평균연비변수)
#7-3 평균 연비 변수가 가장 높은 자동차 3종의 데이터를 출력하세요
mpg %>% arrange(desc(평균연비변수))
#7-3 평균 연비 변수가 가장 높은 자동차 3종의 데이터를 출력하세요
mpg %>% arrange(desc(평균연비변수)) %>% head(3)
#7-1 mpg 데이터 복사본을 만들고 cty, hwy를 합한 합산 연비 변수를 추가하세요
mpg <- as.data.frame(ggplot2::mpg)
mpg2 <- as.data.frame(ggplot2::mpg)
mpg2<- mpg %>% mutate(합산연비변수=cty+hwy)
#7-2 앞에서 만든 합산연비 편수를 2로 나눠 평균 연비 변수를 추가하세요
mpg2<-mpg %>% mutate(평균연비변수=합산연비변수/2)
#7-3 평균 연비 변수가 가장 높은 자동차 3종의 데이터를 출력하세요
mpg2 %>% arrange(desc(평균연비변수))%>% head(3)
#1~3번문제를 해결할 수 있는 구문을 활용해 하나로 된 구문
mpg<- mpg %>% mutate(합산연비변수=cty+hwy) %>% mutate(평균연비변수=합산연비변수/2)
mpg
#7-1 mpg 데이터 복사본을 만들고 cty, hwy를 합한 합산 연비 변수를 추가하세요
mpg <- as.data.frame(ggplot2::mpg)
#1~3번문제를 해결할 수 있는 구문을 활용해 하나로 된 구문
mpg %>% mutate(합산연비변수=cty+hwy) %>% mutate(평균연비변수=합산연비변수/2)%>% arrange(desc(평균연비변수))%>% head(3)
summary(mpg)
mpg %>% groupby(class)%>%summarise(mean(class))
#8-1
mpg %>%summarise(mean(class))
mpg %>%summarise(mean(class))
summary(mpg)
#8-1
mpg %>% group_by(class)%>%summarise(mean(class))
summary(mpg)
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))->차종별연비
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))->차종별연비
차종별연비
arrange(desc(차종별 연비))
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))->차종별연비
#8-2
arrange(desc(차종별연비))
arrange(desc(차종별연비))
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))->차종별연비
#8-2
차종별연비 %>% arrange(desc(차종별연비))
#8-2
mpg %>% group_by(class)%>%arrange(desc(summarise(mean(cty))))
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))->차종별연비
summary(차종별연비)
차종별연비 %>% arrange(desc(mean(cty)))
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))%>% arrange(desc(mean(cty)))
#8-1
mpg %>% group_by(class)%>%summarise(mean(cty))%>% arrange(mean(cty))
차종별연비 %>% arrange(desc(mean(cty)))
#8-2
차종별연비 %>% arrange(desc(mean(mpg$cty)))
차종별연비 %>% arrange(desc(mean(mpg$cty)))
#8-1
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
#8-2
차종별연비->arrange(meancty)
#8-1
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
#8-2
차종별연비->arrange(meanCty)
#8-1
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
#8-2
차종별연비->arrange(meanCty)
#8-1
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
#8-2
차종별연비->arrange(meanCty)
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
차종별연비
#8-1
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
#8-2
차종별연비->arrange(meanCty)
차종별연비
#8-1
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
#8-2
차종별연비 %>% arrange(meanCty)
#8-1
mpg %>% group_by(class)%>%summarise(meanCty=mean(cty))->차종별연비
#8-2
차종별연비 %>% arrange(desc(meanCty))
#8-3 hwy평균이 가장 높은 회사 세곳
차종별연비 %>% arrange(desc(meanCty)) %>% head(3)
summary(mpg)
mpg
#8-4 경차 차종
mpg %>%filter(class='compact')
mpg %>%filter(class='compact')
#8-4 경차 차종
mpg %>%filter(class=='compact)
manufacturer class=compact
#8-4 경차 차종
mpg %>%filter(class=='compact')
mpg
mpg%>%filter(class=='compact')
summary(mpg)
mpg%>%filter(class=='compact') %>% group_by(manufacturer)
#8-4 경차 차종
mpg%>%filter(class=='compact') %>% group_by(manufacturer) %>% summarise(n())
#8-4 경차 차종
mpg%>%filter(class=='compact') %>% group_by(manufacturer) %>% summarise(차종수=n()) %>% arrange(차종수)
#8-4 경차 차종
mpg%>%filter(class=='compact') %>% group_by(manufacturer) %>% summarise(차종수=n()) %>% arrange(desc(차종수))
fuel<-data.frame(fl=c("c","d","e","p","r"),
price_fl=c(2.35,2.38,2.11,2.76,2.22),
stringsAsFactors = F)
fuel
#9-1
mpg$fl
mpg <- full_join(mpg, fuel, by = "fl")
mpg
#9-2
mpg %>% select(model,fl,price_fl) %>% head(5)
#10
midwest <- as.data.frame(ggplot2::midwest)
summary(midwest)
midwest<-midwest %>% mutate(전체인구대비미성년인구백분율=(popadults/poptotal*100))
midwest
#10
midwest <- as.data.frame(ggplot2::midwest)
midwest<-midwest %>% mutate(전체인구대비미성년인구백분율=100-(popadults/poptotal*100))
midwest
#10-2
midwest %>% arrange(전체인구대비미성년인구백분율)
#10-2
midwest %>% arrange(desc(전체인구대비미성년인구백분율)) %>% head(5)
#10
midwest <- as.data.frame(ggplot2::midwest)
#10-1
midwest<-midwest %>% mutate(미성년비율=100-(popadults/poptotal*100))
#10-2
midwest %>% arrange(desc(미성년비율)) %>% head(5)
test
exam
exam %>%
mutate(test = ifelse(science >= 60, "pass", "fail")) %>%
head
midwest %>% mutate(미성년비율등급=ifelse(미성년비율>=40,"large",ifelse(미성년비율>=30|미성년비율<40,"middle","small")))
midwest %>% group_by(미성년비율) %>% summarise(n())
midwest %>% group_by(미성년비율등급급) %>% summarise(n())
midwest %>% group_by(미성년비율등급) %>% summarise(n())
midwest
#10-3
midwest<-midwest %>% mutate(미성년비율등급=ifelse(미성년비율>=40,"large",ifelse(미성년비율>=30|미성년비율<40,"middle","small")))
midwest %>% group_by(미성년비율등급) %>% summarise(n())
#10-1
midwest %>% mutate(미성년비율=(popadults/poptotal*100))
#10-1
midwest<-midwest %>% mutate(미성년비율=100-(popadults/poptotal*100))
#10-1
midwest<-midwest %>% mutate(미성년비율=100-(popadults/poptotal*100))
midwest<-midwest %>% mutate(미성년비율=100-(popadults/poptotal*100))
midwest
midwest %>% group_by(미성년비율등급) %>% summarise(n())
mpg[c(65,124,131,153,212),"hwy"]
mpg[c(65,124,131,153,212),"hwy"]<-NA
#11-1
is.na(drv)
#11-1
is.na(mpg&drv)
#11-1
is.na(mpg$drv)
is.na(mpg$hwy)
#11-2
df %>% filter(!is.na(hwy)) %>% summarise(mean(drv))
#11-2
mpg %>% filter(!is.na(hwy)) %>% summarise(mean(drv))
is.na(mpg$hwy)
is.na(mpg$drv)
mpg%>% filter(!is.na(hwy)) %>% summarise(mean(drv))
#11-2
mpg%>% filter(!is.na(hwy)&!is.na(drv)) %>% summarise(mean(drv))
mean(mpg$drv, na.rm = T)
mpg
mpg[c(65,124,131,153,212),"hwy"]<-NA
mpg
mean(mpg$dwy, na.rm = T)
mpg$drv
#11-2
mpg%>% filter(!is.na(hwy)) %>% group_by(drv) %>% summarise(mean(hwy))
#12
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10,14,58,93),"drv"]<-"k"
mpg[c(29,43,129,203),"cty"]<-c(3,4,39,42)
#12-1
is.na(drv)
#12-1
is.na(mpg$drv)
mpg[c(10,14,58,93),"drv"]<-"k"
mpg
mpg[c(10,14,58,93),"drv"]<-"k"
(mpg[c(10,14,58,93),"drv"]<-"k")
mpg[c(10,14,58,93),"drv"]<-"k"
is.na(mpg$drv)
mpg %>% filter(drv=="k")
is.na(mpg$drv)
#12-1
mpg$drv <- ifelse(mpg$drv %in% c("4", "f", "r"), mpg$drv, NA)
# 이상치 확인
table(mpg$drv)
boxplot(mpg$cty)$stats
mpg$cty <- ifelse(mpg$cty < 9 | mpg$cty > 26, NA, mpg$cty)
# 상자 그림 생성
boxplot(mpg$cty)
mpg %>%
filter(!is.na(drv) & !is.na(cty)) %>%
group_by(drv) %>%
summarise(mean_hwy = mean(cty))
mpg %>%
filter(!is.na(drv) & !is.na(cty)) %>%
group_by(drv) %>%
summarise(mean(cty))
#12-1
mpg$drv <- ifelse(mpg$drv %in% c("4", "f", "r"), mpg$drv, NA)
table(mpg$drv)
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10,14,58,93),"drv"]<-"k"
mpg[c(29,43,129,203),"cty"]<-c(3,4,39,42)
#12-1
mpg$drv <- ifelse(mpg$drv %in% c("4", "f", "r"), mpg$drv, NA)
# 이상치 확인
table(mpg$drv)
#12-2
boxplot(mpg$cty)$stats
mpg$cty <- ifelse(mpg$cty < 9 | mpg$cty > 26, NA, mpg$cty)
boxplot(mpg$cty)
#12-3
mpg %>%
filter(!is.na(drv) & !is.na(cty)) %>%  group_by(drv) %>%summarise(mean(cty))
(mpgNew<-mpg %>% select(class,cty))
#5-1 mpg데이터는 11개 변수로 구성되어 있다.
# mpg데이터에서 class(자동차의 종류), cty(도시연비)
#변수를 추출해 새로운 데이터를 만드세요
mpgNew<-mpg %>% select(class,cty) %>% head(5)
mpgNew<-mpg %>% select(class,cty) %>% head(5)
mpgNew<-mpg %>% select(class,cty)
mpgNew %>% head(5)
#5-2
mpgNew %>% filter(class='suv'|class='compact') %>% group_by(class) %>% summarise(mean(cty))
mpgNew
#5-2
mpgNew %>% filter(class='suv'|class='compact')
#5-2
mpgNew %>% filter(class='suv'|class='compact')
#5-2
mpgNew %>% filter(class=='suv'|class=='compact')
#5-2
mpgNew %>% filter(class=='suv'|class=='compact')%>% group_by(class) %>% summarise(mean(cty))
mpgNew<-mpg %>% select(class,cty)
mpgNew %>% head(5)
#5-2
mpgNew %>% filter(class=='suv'|class=='compact')%>% group_by(class) %>% summarise(mean(cty))
mpg <- as.data.frame(ggplot2::mpg)
#5-1 mpg데이터는 11개 변수로 구성되어 있다.
# mpg데이터에서 class(자동차의 종류), cty(도시연비)
#변수를 추출해 새로운 데이터를 만드세요
mpgNew<-mpg %>% select(class,cty)
mpgNew %>% head(5)
#5-2
mpgNew %>% filter(class=='suv'|class=='compact')%>% group_by(class) %>% summarise(mean(cty))
mpg
#6
mpg %>% filter(manufacturer=='audi')
#6
mpg %>% filter(manufacturer=='audi') %>% group_by(model) %>% summarise(mean(hwy))
#6
mpg %>% filter(manufacturer=='audi') %>% summarise(mean(hwy))
#6
mpg %>% filter(manufacturer=='audi')
#6
mpg %>% filter(manufacturer=='audi') %>% arrange(desc(hwy))
#6
mpg %>% filter(manufacturer=='audi') %>% arrange(desc(hwy)) %>% head(5)
